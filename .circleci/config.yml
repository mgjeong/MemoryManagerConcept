# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    machine: true
    steps:
        #need once
      - run: no_proxy=165.213.149.164 curl -sL http://165.213.149.164/scripts/set_proxy_setting.sh | bash -
      - checkout
      - run:
          #need to build build-container
          name: Set timezone
          command: |
              sudo apt-get update
              sudo apt-get install -y tzdata
              sudo dpkg-reconfigure -f noninteractive tzdata
      - run:
          #need to run build-container
          name: Install prerequisite package
          command: |
              sudo apt-get update
              sudo apt-get install -y rsync
      - run:
          #golang-1.12.5 is used in build-container
          name: Install golang 1.12.5
          command: |
              wget https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz
              sudo tar -C /usr/local -xzf go1.12.5.linux-amd64.tar.gz
      - run:
          #set bash var in BASH_ENV to set permanently
          name: Set env
          command: |
              echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
              echo 'export GOPATH=$HOME/go' >> $BASH_ENV
              echo 'export GOBIN=$GOPATH/bin' >> $BASH_ENV
              echo 'export PATH=$PATH:/usr/local/go/bin:$GOBIN' >> $BASH_ENV
              echo 'export KUBERNETES_HTTP_PROXY=http://10.112.1.184:8080' >> $BASH_ENV
              echo 'export KUBERNETES_HTTPS_PROXY=http://10.112.1.184:8080' >> $BASH_ENV
      - run:
          name: Check env
          command: |
              export
              go env
      - run:
          #TODO: delete this job when firewall issue is resolved
          #https://github.sec.samsung.net/CircleCI/issues/issues/296
          name: Pull build container
          command: |
              sudo docker pull k8s.gcr.io/kube-cross:v1.12.5-1
              sudo docker images
      - run:
          #Build build-container then execute build-container to build kubernetess binary
          name: build binary
          command: |
              ./build/run.sh make kubelet KUBE_BUILD_PLATFORMS=linux/amd64
      - run:
          name: run unittest
          command: |
              go test -v ./pkg/kubelet/cm/memorymanager/...
